{"version":3,"file":"static/js/981.eaae43df.chunk.js","mappings":"8QAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2hBA2BtBC,EAAoBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,guBAgC9BG,EAAoBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6bAqB9BK,EAAcP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8HAOxBO,EAAQT,EAAAA,GAAAA,SAAeU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8tDAiGvBS,EAAgBX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+UAmB1BW,EAAOb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yLAUfa,EAAMf,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,2CAIhBe,EAAOjB,EAAAA,GAAAA,EAAQkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,sOAYfiB,EAAOnB,EAAAA,GAAAA,OAAaoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,iqBAWpB,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAsBzB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAGzBC,EAAUzB,EAAAA,GAAAA,IAAU0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,2CAKpByB,EAAkB3B,EAAAA,GAAAA,IAAU4B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,0VAmB5B2B,EAAO7B,EAAAA,GAAAA,OAAa8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,23BAYX,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IACpC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IAGvB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IACd,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IAY3B,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IACpC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IAGvB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAUzBQ,EAAShC,EAAAA,GAAAA,OAAaiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,quBAgBtB,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IACd,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAYtC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAKvB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IACd,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAKpCU,EAAMlC,EAAAA,GAAAA,IAAUmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,mN,2JCnXhBkC,GAAQpC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mKAMnB,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IAIvBM,GAAUrC,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+DAIpBoC,GAAatC,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,QACvBqC,GAAOvC,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oIAOfsC,GAAOxC,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yFAGlB,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IAGvBU,GAAczC,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6JAS3BwC,GAAQ1C,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,2CAIlBH,GAAYC,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8NAIb,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,GACrBmB,I,UCjC1BC,IAAAA,cAAoB,UAEb,I,qBAAMC,GAAgB,SAAHC,GAAyC,IAAnCC,EAAWD,EAAXC,YAAaC,EAAcF,EAAdE,eAsBrCC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,GAAAA,MAEXC,EAAYL,EAAQM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAM,IAC9CC,EAAeT,EAAQM,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,IAExD,OACEE,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEF,EAAAA,GAAAA,KAACf,IAAK,CACJkB,OAAQf,EACRgB,eAAgB,WACdf,GAAe,EACjB,EACAgB,MAlCe,CACnBC,QAAS,CACPC,gBAAiB,yBAEnBC,QAAS,CACPC,UAAW,aACXC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,sBACTC,YAAa,OACbC,MAAO,QACPC,OAAQ,QACRC,aAAc,OACdb,gBAAiB,YAkBfc,aAAa,kBAAiBnB,UAE9BoB,EAAAA,GAAAA,MAAClF,GAAS,CAAA8D,SAAA,EACRF,EAAAA,GAAAA,KAAClB,GAAW,CAACyC,QAAS,WAAOlC,GAAe,GAC1CI,EAAS,cACX,EAAGS,UACDF,EAAAA,GAAAA,KAACjB,GAAK,CAAAmB,UACJF,EAAAA,GAAAA,KAAA,OAAKwB,UAAWC,EAAAA,EAAS,qBAG7BzB,EAAAA,GAAAA,KAACvB,GAAK,CAAAyB,SAAC,eACPoB,EAAAA,GAAAA,MAAC5C,GAAO,CAAAwB,SAAA,EACNoB,EAAAA,GAAAA,MAAC3C,GAAU,CAAAuB,SAAA,EACTF,EAAAA,GAAAA,KAACpB,GAAI,CAAAsB,SAAC,4BACNF,EAAAA,GAAAA,KAAA,MAAAE,SACGP,EAAU+B,KAAI,SAAA7B,GAAI,OACjBG,EAAAA,GAAAA,KAACnB,GAAI,CAAAqB,SAAiBL,EAAK8B,IAAhB9B,EAAK+B,IAAqB,UAI3CN,EAAAA,GAAAA,MAAC3C,GAAU,CAAAuB,SAAA,EACTF,EAAAA,GAAAA,KAACpB,GAAI,CAAAsB,SAAC,eACNF,EAAAA,GAAAA,KAAA,MAAAE,SACGH,EAAa2B,KAAI,SAAA7B,GAAI,OACpBG,EAAAA,GAAAA,KAACnB,GAAI,CAAAqB,SAAiBL,EAAK8B,IAAhB9B,EAAK+B,IAAqB,kBASvD,E,sBCpFalD,GAAUrC,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+SAgBpBsF,GAAaxF,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,+IASvBkC,GAAQpC,EAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,gHAInB,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOkE,KAAK,IAIvBxE,GAAOjB,EAAAA,GAAAA,EAAQQ,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,gHAIjB,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOkE,KAAK,IAIvBC,GAAM1F,EAAAA,GAAAA,IAAUU,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,gDAKhByF,GAAM3F,EAAAA,GAAAA,OAAaY,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,uiBAQJ,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IACpC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IAWd,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IACpC,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOkE,KAAK,IACb,SAAApE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAGzCoE,IAAY5F,EAAAA,EAAAA,IAAO6F,GAAAA,GAAP7F,CAAYc,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,+lBAWhB,SAAAmB,GAAC,OAAIA,EAAEC,MAAMC,OAAOkE,KAAK,IAEd,SAAApE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAOrC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,I,0GC7EhCsE,GAAQ,WACnB,IAAM1C,GAAWC,EAAAA,GAAAA,MACX0C,GAAWC,EAAAA,GAAAA,MACjBC,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAW5C,OANAI,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACI,QAAlBA,EAAIT,EAASU,aAAK,IAAAD,GAAdA,EAAgBE,WAClBJ,GAAoB,EAExB,GAAG,CAACP,EAASU,SAGXxB,EAAAA,GAAAA,MAAC5C,GAAO,CAAAwB,SAAA,EACNoB,EAAAA,GAAAA,MAAA,OAAApB,SAAA,EACEF,EAAAA,GAAAA,KAACvB,GAAK,CAAAyB,SAAC,uDACPF,EAAAA,GAAAA,KAAC1C,GAAI,CAAA4C,SAAC,4LAKNoB,EAAAA,GAAAA,MAACO,GAAU,CAAA3B,SAAA,EACTF,EAAAA,GAAAA,KAACgC,GAAG,CAACT,QApBc,WACzB9B,EAAS,cAAe,CAAEqD,MAAO,CAAEC,WAAW,IAChD,EAkByC7C,SAAC,cAClCF,EAAAA,GAAAA,KAACiC,GAAS,CAAA/B,SAAC,kBAGfF,EAAAA,GAAAA,KAAC+B,GAAG,CACFiB,OAAM,GAAAC,OAAKC,GAAI,SAAAD,OAAQE,GAAI,OAC3BC,IAAKF,GACLG,IAAI,SACJnC,MAAM,MACNC,OAAO,SAETnB,EAAAA,GAAAA,KAACsD,GAAAA,EAAY,CACXZ,iBAAkBA,EAClBC,oBAAqBA,MAI7B,EC5BaY,GAAe,WAC1B,IAAMC,GAAQjE,EAAAA,EAAAA,IAAYkE,EAAAA,IACpBC,GAAQnE,EAAAA,EAAAA,IAAYoE,EAAAA,IAC1BrB,GAAgDC,EAAAA,EAAAA,UAASmB,EAAME,OAAO,GAAEpB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjEuB,EAAgBrB,EAAA,GAAEsB,EAAmBtB,EAAA,GAC5CuB,GAAsCxB,EAAAA,EAAAA,UAAS,IAAGyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8B5B,EAAAA,EAAAA,UAAS,IAAG6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAsChC,EAAAA,EAAAA,WAAS,GAAMiC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAA9CnF,EAAWoF,EAAA,GAAEnF,EAAcmF,EAAA,GAC5BC,EACJJ,GAAWX,EAAME,OAAS,EACtBc,KAAKC,KAAwB,EAAjBN,EAAQT,OAAcF,EAAME,OAAU,KAClD,EACAgB,GAAWC,EAAAA,EAAAA,OACjBjC,EAAAA,EAAAA,YAAU,WACRgC,GAASE,EAAAA,EAAAA,IAAW,CAAEtB,MAAAA,IACxB,GAAG,CAACoB,EAAUpB,IA8Fd,OACExD,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,SACGwD,EAAME,OAAS,GACdtC,EAAAA,GAAAA,MAAArB,GAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,GAAAA,KAACzB,EAAG,CAAA2B,UAEFF,EAAAA,GAAAA,KAAC+E,EAAAA,EAAgB,CACnBC,KAAM,GACNC,YAAa,EACbR,SAAUA,EACVS,UAAU,OAGV5D,EAAAA,GAAAA,MAAA,QAAM6D,SAtEO,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAc5B,EAAMG,GAE1B,GAAII,EAAa,CACf,IAAMsB,EAAY,CAChB3D,IAAK0D,EAAY1D,IACjB4D,GAAIF,EAAYE,GAChB7D,GAAIsC,EACJpE,KAAM,MAERyE,EAAW,GAADrB,QAAAwC,EAAAA,EAAAA,GAAKpB,GAAO,CAAEkB,KACxBrB,EAAe,GAAI,CAErBU,GAASc,EAAAA,EAAAA,IAAW,CAAEC,KAAMtB,EAASb,MAAAA,KACrCnE,GAAe,GACf6E,EAAe,GACjB,EAqDqChE,SAAA,EAC3BoB,EAAAA,GAAAA,MAAClF,EAAS,CAAA8D,SAAA,EACRoB,EAAAA,GAAAA,MAAC9E,EAAiB,CAAA0D,SAAA,EAChBoB,EAAAA,GAAAA,MAAC1E,EAAW,CAAAsD,SAAA,EACVF,EAAAA,GAAAA,KAAClD,EAAK,CACJ8I,YAAY,8FACZC,MAAO5B,EACP6B,SAAU,SAAAC,GAAC,OAAI7B,EAAe6B,EAAEC,OAAOH,MAAM,EAC7CI,KAAK,IACLC,KAAK,QAEP5E,EAAAA,GAAAA,MAACtE,EAAa,CAAAkD,SAAA,EACZF,EAAAA,GAAAA,KAAC9C,EAAI,CAAAgD,SAAC,aACNF,EAAAA,GAAAA,KAAC5C,EAAG,CAAA8C,UACFF,EAAAA,GAAAA,KAAA,OAAKwB,UAAWC,EAAAA,EAAS,0BAI9BoC,EAAmBH,EAAME,OAAU,IAClCtC,EAAAA,GAAAA,MAAC9D,EAAI,CAAC2I,KAAK,SAAS5E,QA1Gb,WACrB,GAAImC,EAAME,OAAS,EAAG,CACpB,IAAM0B,EAAc5B,EAAMG,GAC1B,GAAII,EAAa,CACf,IAAMsB,EAAY,CAChB3D,IAAK0D,EAAY1D,IACjB4D,GAAIF,EAAYE,GAChB7D,GAAIsC,EACJpE,KAAM,MAERyE,EAAW,GAADrB,QAAAwC,EAAAA,EAAAA,GAAKpB,GAAO,CAAEkB,KACxBrB,EAAe,GACjB,CACAJ,GAAoB,SAAAsC,GAAS,OAAKA,EAAY,GAAK1C,EAAME,MAAM,GACjE,CACF,EA2F4D1D,SAAA,CAAC,QAE3CF,EAAAA,GAAAA,KAAClC,EAAO,CAAAoC,UACNF,EAAAA,GAAAA,KAAA,OAAKwB,UAAWC,EAAAA,EAAS,0BAKjCzB,EAAAA,GAAAA,KAACtD,EAAiB,CAAAwD,UAChBoB,EAAAA,GAAAA,MAAC1E,EAAW,CAAAsD,SAAA,CAMTwD,EAAME,OAAS,GAAKF,EAAMG,IAAqB7D,EAAAA,GAAAA,KAAC1C,EAAI,CAAA4C,SAClDwD,EAAMG,GAAkB2B,MAEzBxF,EAAAA,GAAAA,KAAC1C,EAAI,CAAA4C,SAAC,wBAERoB,EAAAA,GAAAA,MAACtE,EAAa,CAAAkD,SAAA,EACZF,EAAAA,GAAAA,KAAC9C,EAAI,CAAAgD,SAAC,aACNF,EAAAA,GAAAA,KAAC5C,EAAG,CAAA8C,UACFF,EAAAA,GAAAA,KAAA,OAAKwB,UAAWC,EAAAA,EAAS,2BAMnCH,EAAAA,GAAAA,MAACtD,EAAe,CAAAkC,SAAA,EACdF,EAAAA,GAAAA,KAAC9B,EAAI,CAACiI,KAAK,SAAQjG,SAAC,WACpBF,EAAAA,GAAAA,KAAC3B,EAAM,CAAA6B,SAAC,kBAGZF,EAAAA,GAAAA,KAACd,GAAa,CACZE,YAAaA,EACbC,eAAgBA,QAIpBW,EAAAA,GAAAA,KAACmC,GAAK,KAId,ECrNakE,GAAW,WACtB,OACErG,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEF,EAAAA,GAAAA,KAACuD,GAAY,KAGnB,ECLe,SAAS+C,KACtB,OACEtG,EAAAA,GAAAA,KAAAC,GAAAA,SAAA,CAAAC,UACEF,EAAAA,GAAAA,KAACqG,GAAQ,KAGf,C","sources":["components/Training/TrainingRoom.styled.jsx","components/Modal/WellDoneModal.styled.jsx","components/Modal/WellDoneModal.jsx","components/Training/Empty.styled.jsx","components/Training/Empty.jsx","components/Training/TrainingRoom.jsx","components/Training/Training.jsx","pages/TrainingPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\nbox-sizing: border-box;\ndisplay: block;\npadding: 18px;\n  background-color: #fff;\n  margin-top: 8px;\n@media screen and (min-width: 768px) {\n  width: 704px;\n  height: 600px;\n  margin-bottom: 40px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 15px;\n}\n@media screen and (min-width: 1440px) {\nmargin-top: 16px;\n  border-radius: 15px;\n  padding: 18px;\n  width: 1240px;\n  height: 338px;\n  background-color: #fff;\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 80px;}\n`;\n\nexport const ContainerInputUkr = styled.div`\nposition: relative;\nbox-sizing: border-box;\nwidth: 343px;\nheight: 195px;\n// padding: 22px 22px;\nborder-bottom: 1px solid #dbdbdb;\nborder-radius: 8px 8px 0 0;\n@media screen and (min-width: 768px) {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 22px 22px;\n  width: 668px;\nheight: 282px;\nbackground-color: #fcfcfc;\nmargin: auto;\npadding-bottom: 22px;\n}\n@media screen and (min-width: 1440px) {\n  border-bottom: none;\n  border-right: 1px solid #dbdbdb;\n  border-radius: 8px 0 0 0;\n  padding: 22px 22px;\n  width: 602px;\n  height: 302px;\n  background-color: #fcfcfc;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;}\n`;\nexport const ContainerInputEng = styled.div`\nbox-sizing: border-box;\nwidth: 343px;\nheight: 195px;\nborder-radius: 0 0 8px 8px;\n@media screen and (min-width: 768px) {\n  padding: 22px 22px;\n  width: 668px;\nheight: 282px;\nbackground-color: #fcfcfc;\nmargin: auto;\n}\n@media screen and (min-width: 1440px) {\n  border: 0px solid #dbdbdb;\n  border-radius: 0 8px 8px 0;\n  padding: 22px 22px;\n  width: 602px;\n  height: 302px;\n  background-color: #fcfcfc;\n  margin: auto;}\n`;\nexport const WrapperLang = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  position: relative;\n`;\nexport const Input = styled.textarea`\nresize: none;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 150%;\n  width: 100%;\n  height: 100%;\n  // width: 257px;\n  // height: 30px;\n  display: flex;\n  border: none;\n  background-color: transparent;\n  color: black;\n\n  &::placeholder {\n    font-family: 'SF';\n    color:  #121417;\n    opacity: 1;\n    font-weight: 500;\n  font-size: 16px;\n  \n  }\n\n  &::-webkit-input-placeholder {\n    color:  #121417;\n    opacity: 1;\n    font-weight: 700;\n  font-size: 16px;\n  font-family: 'SF';\n  }\n\n  &::-moz-placeholder {\n    color:  #121417;\n    opacity: 1;\n    font-weight: 500;\n  font-size: 16px;\n  font-family: 'SF';\n  }\n\n  &:-ms-input-placeholder {\n    color:  #121417;\n    opacity: 1;\n    font-weight: 500;\n  font-size: 16px;\n  font-family: 'SF';\n  }\n\n  &:-moz-placeholder {\n    color:  #121417;\n    opacity: 1;\n    font-weight: 500;\n  font-size: 16px;\n  font-family: 'SF';\n  }\n  @media screen and (min-width: 768px) {\n    &::placeholder {\n      font-family: 'SF';\n      color:  #121417;\n      opacity: 1;\n      font-weight: 500;\n    font-size: 20px;\n    \n    }\n  \n    &::-webkit-input-placeholder {\n      color:  #121417;\n      opacity: 1;\n      font-weight: 700;\n    font-size: 20px;\n    font-family: 'SF';\n    }\n  \n    &::-moz-placeholder {\n      color:  #121417;\n      opacity: 1;\n      font-weight: 500;\n    font-size: 20px;\n    font-family: 'SF';\n    }\n  \n    &:-ms-input-placeholder {\n      color:  #121417;\n      opacity: 1;\n      font-weight: 500;\n    font-size: 20px;\n    font-family: 'SF';\n    }\n  \n    &:-moz-placeholder {\n      color:  #121417;\n      opacity: 1;\n      font-weight: 500;\n    font-size: 20px;\n    font-family: 'SF';\n    }\n  }\n`;\nexport const ContainerLang = styled.div`\nposition: absolute;\ntop: 155px;\nleft: 240px;\ndisplay: flex;\ngap: 8px;\nalign-items: center;\n@media screen and (min-width: 768px){\n  top: 0px;\n  left: 530px;\n  display: flex;\n  gap: 8px;\n  align-items: center;}\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    top: 0px;\n  left: 470px;\n  }\n`;\nexport const Lang = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 150%;\n  @media screen and (min-width: 768px) {\n    font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  }\n`;\nexport const Svg = styled.svg`\n  width: 32px;\n  height: 32px;\n`;\nexport const Text = styled.p`\nmargin-top: 22px;\n// margin-left: 22px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  @media screen and (min-width: 1440px) {\n    font-size: 20px;\n    margin-left: 0px;\n    margin-top: 0px;\n  }\n`;\nexport const Next = styled.button`\nmargin-top: 106px;\nborder: none;\n  background-color: transparent;\n  font-weight: 500;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  display: flex;\n  gap: 8px;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n    position: absolute;\n    top: 250px;\n    left: 15px; \n  }\n@media screen and (min-width: 1440px) {\n  position: relative;\n  top: 0px;\n  left: 0px;\n  margin-top: 0px;\nborder: none;\n  background-color: transparent;\n  font-weight: 500;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  display: flex;\n  gap: 8px;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }}\n`;\nexport const SvgNext = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const ContainerButton = styled.div`\nmargin-right: auto;\nmargin-left: auto;\nmargin-top: 116px;\n@media screen and (min-width: 768px) {\n  margin-top: 0px;\n  width: 416px;\n  display: flex;\n  gap: 10px;\n  margin-left: 32px;\n}\n  @media screen and (min-width: 1440px) {\n    margin-top: 0px;\n  width: 602px;\n  display: flex;\n  gap: 10px;\n  margin-left: 25px;\n  }\n`;\nexport const Save = styled.button`\ndisplay: block;\nmargin-right: auto;\nmargin-left: auto;\nborder: 1px solid rgba(252, 252, 252, 0.4);\n  border-radius: 30px;\n  padding: 14px 80px;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n    background-color: ${p => p.theme.colors.white};\n    border: 1px solid #85aa9f;\n  }\n@media screen and (min-width: 768px) {\n  border: 1px solid rgba(252, 252, 252, 0.4);\n  border-radius: 30px;\n  padding: 14px 80px;\n  width: 203px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n    background-color: transparent;\n    border: 1px solid #85aa9f;\n  }}\n  @media screen and (min-width: 1440px)  {\n    margin-right: 10px;\n    margin-left: 70px;\n  }\n`;\n\nexport const Cansel = styled.button`\ncolor:rgba(18, 20, 23, 0.5) ;\nmargin-right: auto;\nmargin-left: auto;\nborder-radius: 30px;\n  padding: 14px 71px;\n  width: 363px;\n  height: 56px;\n  border: none;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: transparent;\n  \n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.green};\n  }\n@media screen and (min-width: 768px) {\n  border-radius: 30px;\n  padding: 14px 71px;\n  width: 203px;\n  height: 56px;\n  border: 1px solid #85aa9f;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: transparent;\n  color: ${p => p.theme.colors.green};\n  margin-right: 10px;\n  margin-left: 0px;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.green};\n  }}\n  \n`;\n\nexport const Con = styled.div`\nmargin-right: 8px;\nmargin-left: auto;\n  margin-top: 24px;\n  width: 60px;\n@media screen and (min-width: 768px) {\n  margin-right: 100px;\n  margin-left: auto;\n  margin-top: 62px;\n  width: 60px;}\n`;\n","import styled from 'styled-components';\nimport openBook from '../../assets/background/openbook.png';\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 40px;\n  line-height: 120%;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: ${p => p.theme.colors.white};\n  margin-bottom: 28px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const WrapperRes = styled.div``;\nexport const Desc = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  color: rgba(252, 252, 252, 0.5);\n  margin-bottom: 8px;\n`;\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 20px;\n  color: ${p => p.theme.colors.white};\n  margin-bottom: 4px;\n`;\nexport const ButtonClose = styled.button`\n  margin-left: auto;\n  background-color: transparent;\n  display: block;\n  border: none;\n  position: absolute;\n  right: -28px;\n  top: -28px;\n`;\nexport const Close = styled.svg`\n  width: 32px;\n  height: 32px;\n`;\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background-color: ${p => p.theme.colors.green};\n  background-image: url(${openBook});\n  background-size: content;\n  background-repeat: no-repeat;\n  background-position: 230px 250px;\n`;\n","import Modal from 'react-modal';\n\nimport sprite from '../../assets/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectResults } from '../../redux/words/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Title,\n  Wrapper,\n  WrapperRes,\n  Desc,\n  Item,\n  ButtonClose,\n  Close,\n  Container,\n} from './WellDoneModal.styled';\nModal.setAppElement('#modal');\n\nexport const WellDoneModal = ({ isOpenModal, setIsOpenModal }) => {\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'rgba(18, 20, 23, 0.2)',\n    },\n    content: {\n      boxSizing: 'border-box',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '48px 64px 48px 64px',\n      paddingLeft: '64px',\n      width: '527px',\n      height: '519px',\n      borderRadius: '30px',\n      backgroundColor: '#85AA9F',\n    },\n  };\n\n  const results = useSelector(selectResults);\n  const navigate = useNavigate();\n\n  const doneTasks = results.filter(task => task.isDone);\n  const notDoneTasks = results.filter(task => !task.isDone);\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={() => {\n          setIsOpenModal(false);\n        }}\n        style={customStyles}\n        contentLabel=\"More info modal\"\n      >\n        <Container>\n          <ButtonClose onClick={() => {setIsOpenModal(false);\n            navigate('/dictionary')\n          } }>\n            <Close>\n              <use xlinkHref={sprite + '#icon-close'}></use>\n            </Close>\n          </ButtonClose>\n          <Title>Well done</Title>\n          <Wrapper>\n            <WrapperRes>\n              <Desc>Сorrect answers: </Desc>\n              <ul>\n                {doneTasks.map(task => (\n                  <Item key={task._id}>{task.ua}</Item>\n                ))}\n              </ul>\n            </WrapperRes>\n            <WrapperRes>\n              <Desc>Mistakes:</Desc>\n              <ul>\n                {notDoneTasks.map(task => (\n                  <Item key={task._id}>{task.ua}</Item>\n                ))}\n              </ul>\n            </WrapperRes>\n          </Wrapper>\n        </Container>\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  max-width: 902px;\n  margin-top: 193px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  display: flex;\n  gap: 32px;\n  padding: 10px;\n  @media screen and (max-width: 767px) {\n    max-width: 581px;\n    margin-top: 140px;\n    flex-direction: column-reverse;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\ndisplay: block;\nmargin-left: auto;\n  margin-right: auto;\n@media screen and (min-width: 767px) {\n  display: flex;\n  gap: 10px;}\n`;\n\nexport const Title = styled.h1`\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 30px;\n  color: ${p => p.theme.colors.black};\n  margin-bottom: 32px;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  color: ${p => p.theme.colors.black};\n  margin-bottom: 64px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n\nexport const Btn = styled.button`   cursor: pointer;\n        width: 203px;\n        height: 56px;\n        margin-top: 24px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 14px;\n        background-color: ${p => p.theme.colors.green};\n        color: ${p => p.theme.colors.white};\n        border: none;\n        border-radius: 30px;\n      \n        font-size: 18px;\n        font-weight: 600;\n        line-height: 28px;\n      }\n      \n      &:hover,\n      &:focus {\n        background-color: ${p => p.theme.colors.white};\n        color: ${p => p.theme.colors.black};\n        border: 1px solid  ${p => p.theme.colors.green};\n      `;\n\nexport const BtnCancel = styled(Link)`\n      box-sizing: border-box;\n            cursor: pointer;\n            width: 203px;\n            height: 56px;\n            margin-top: 24px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 14px;\n            background-color: transparent;\n            color: ${p => p.theme.colors.black};\n            border-radius: 30px;\n            border: 1px solid ${p => p.theme.colors.green};\n            font-size: 18px;\n            font-weight: 600;\n            line-height: 28px;\n          }\n          \n          &: hover, &: focus {\n            color:${p => p.theme.colors.green};\n          `;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { ModalAddWord } from '../../components/Modal/ModalAddWord';\n\nimport {\n  Wrapper,\n  BtnWrapper,\n  Btn,\n  BtnCancel,\n  Img,\n  Title,\n  Text,\n} from './Empty.styled';\n\nimport img1 from '../../assets/background/book.png';\nimport img2 from '../../assets/background/b00k2x.png';\n\nexport const Empty = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isOpenModalLogin, setIsOpenModalLogin] = useState(false);\n  const handleAddWordClick = () => {\n    navigate('/dictionary', { state: { openModal: true } });\n  };\n\n  useEffect(() => {\n    if (location.state?.openModal) {\n      setIsOpenModalLogin(true);\n    }\n  }, [location.state]);\n\n  return (\n    <Wrapper>\n      <div>\n        <Title>You don't have a single word to learn right now. </Title>\n        <Text>\n          Please create or add a word to start the workout. We want to improve\n          your vocabulary and develop your knowledge, so please share the words\n          you are interested in adding to your study.\n        </Text>\n        <BtnWrapper>\n          <Btn onClick={handleAddWordClick}>Add word</Btn>\n          <BtnCancel>Cancel</BtnCancel>\n        </BtnWrapper>\n      </div>\n      <Img\n        srcSet={`${img1} 1x, ${img2} 2x`}\n        src={img1}\n        alt=\"report\"\n        width=\"265\"\n        height=\"283\"\n      />\n      <ModalAddWord\n        isOpenModalLogin={isOpenModalLogin}\n        setIsOpenModalLogin={setIsOpenModalLogin}\n      />\n    </Wrapper>\n  );\n};\n","import {\n  Container,\n  ContainerInputUkr,\n  ContainerInputEng,\n  WrapperLang,\n  Input,\n  ContainerLang,\n  Lang,\n  Svg,\n  Text,\n  Next,\n  SvgNext,\n  ContainerButton,\n  Save,\n  Cansel,\n  Con,\n} from './TrainingRoom.styled';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectTasks } from '../../redux/words/selectors';\nimport { selectToken } from '../../redux/auth/selectors';\nimport { fetchTasks, addAnswers } from '../../redux/words/operation';\nimport sprite from '../../assets/sprite.svg';\n// import { Circle } from 'rc-progress';\nimport { CircularProgress } from '../../components/Progress';\nimport { WellDoneModal } from '../../components/Modal/WellDoneModal';\nimport { Empty } from './Empty';\n\nexport const TrainingRoom = () => {\n  const token = useSelector(selectToken);\n  const tasks = useSelector(selectTasks);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(tasks.length/2);\n  const [translation, setTranslation] = useState('');\n  const [answers, setAnswers] = useState([]);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const progress =\n    answers && tasks.length > 0\n      ? Math.ceil(((answers.length * 2) / tasks.length) * 100)\n      : 0;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTasks({ token }));\n  }, [dispatch, token]);\n\n  //   const handleNextTask = () => {\n  //     console.log(tasks)\n\n  //     if (tasks.length > 0 && translation) {\n  //         const currentTask = tasks[currentTaskIndex];\n  //       const newAnswer = {\n  //         _id: currentTask._id,\n  //         en: translation,\n  //         ua: currentTask.ua,\n  //         task: 'en',\n  //       };\n  //       setAnswers([...answers, newAnswer]);\n  //       console.log(answers);\n  //       setTranslation('');\n  //       setCurrentTaskIndex(prevIndex => (prevIndex + 1) % tasks.length);\n  //     }\n  //   };\n\n  const handleNextTask = () => {\n    if (tasks.length > 0) {\n      const currentTask = tasks[currentTaskIndex];\n      if (translation) {\n        const newAnswer = {\n          _id: currentTask._id,\n          en: currentTask.en,\n          ua: translation,\n          task: 'ua',\n        };\n        setAnswers([...answers, newAnswer]);\n        setTranslation('');\n      }\n      setCurrentTaskIndex(prevIndex => (prevIndex + 1) % tasks.length);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const currentTask = tasks[currentTaskIndex];\n\n    if (translation) {\n      const newAnswer = {\n        _id: currentTask._id,\n        en: currentTask.en,\n        ua: translation,\n        task: 'en',\n      };\n      setAnswers([...answers, newAnswer]);\n      setTranslation('');}\n\n    dispatch(addAnswers({ data: answers, token }));\n    setIsOpenModal(true);\n    setTranslation('');\n  };\n\n  // const CircularProgress = ({ progress }) => {\n  //   const containerStyle = {\n  //     display: 'flex',\n  //     alignItems: 'center',\n  //   };\n\n  //   const circleContainerStyle = {\n  //     position: 'relative',\n  //     width: 50,\n  //     height: 50,\n  //     marginLeft: '16px',\n  //   };\n\n  //   const progressTextStyle = {\n  //     fontSize: '16px',\n  //     fontWeight: '500',\n  //     position: 'absolute',\n  //     top: '50%',\n  //     left: '50%',\n  //     transform: 'translate(-50%, -50%)',\n  //   };\n\n  //   return (\n  //     <div style={containerStyle}>\n  //       <div style={circleContainerStyle}>\n  //         <Circle\n  //           percent={progress}\n  //           size={58}\n  //           strokeWidth={5}\n  //           strokeColor=\"#2BD627\"\n  //           trailColor=\"grey\"\n  //         />\n  //         <div style={progressTextStyle}>{`${progress}`}</div>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  return (\n    <>\n      {tasks.length > 0 ? (\n        <>\n          <Con>\n            {/* <CircularProgress progress={progress} /> */}\n            <CircularProgress\n          size={58}\n          strokeWidth={5}\n          progress={progress}\n          withText={true}\n        />\n          </Con>\n          <form onSubmit={handleSubmit}>\n            <Container>\n              <ContainerInputUkr>\n                <WrapperLang>\n                  <Input\n                    placeholder=\"Введіть переклад\"\n                    value={translation}\n                    onChange={e => setTranslation(e.target.value)}\n                    rows=\"8\"\n                    cols=\"50\"\n                  ></Input>\n                  <ContainerLang>\n                    <Lang>Ukraine</Lang>\n                    <Svg>\n                      <use xlinkHref={sprite + '#icon-ukraine'}></use>\n                    </Svg>\n                  </ContainerLang>\n                </WrapperLang>\n                {currentTaskIndex < tasks.length  - 1 && (\n                  <Next type=\"button\" onClick={handleNextTask}>\n                    Next\n                    <SvgNext>\n                      <use xlinkHref={sprite + '#icon-switch'}></use>\n                    </SvgNext>\n                  </Next>\n                )}\n              </ContainerInputUkr>\n              <ContainerInputEng>\n                <WrapperLang>\n                  {/* <Text>\n              {tasks.length > 0\n                ? tasks[currentTaskIndex].en\n                : 'No tasks available'}\n            </Text> */}\n                  {tasks.length > 0 && tasks[currentTaskIndex] ? (<Text>\n                    {tasks[currentTaskIndex].en}</Text>\n                  ) : (\n                    <Text>No tasks available</Text>\n                  )}\n                  <ContainerLang>\n                    <Lang>English</Lang>\n                    <Svg>\n                      <use xlinkHref={sprite + '#icon-uk'}></use>\n                    </Svg>\n                  </ContainerLang>\n                </WrapperLang>\n              </ContainerInputEng>\n            </Container>\n            <ContainerButton>\n              <Save type=\"submit\">Save </Save>\n              <Cansel>Cansel</Cansel>\n            </ContainerButton>\n          </form>\n          <WellDoneModal\n            isOpenModal={isOpenModal}\n            setIsOpenModal={setIsOpenModal}\n          />\n        </>\n      ) : (\n        <Empty/>\n      )}\n    </>\n  );\n};\n","import { TrainingRoom } from './TrainingRoom';\nexport const Training = () => {\n  return (\n    <>\n      <TrainingRoom />\n    </>\n  );\n};\n","import { Training } from '../components/Training/Training';\n\nexport default function TrainingPage() {\n  return (\n    <>\n      <Training />\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ContainerInputUkr","_templateObject2","ContainerInputEng","_templateObject3","WrapperLang","_templateObject4","Input","_templateObject5","ContainerLang","_templateObject6","Lang","_templateObject7","Svg","_templateObject8","Text","_templateObject9","Next","_templateObject10","p","theme","colors","green","SvgNext","_templateObject11","ContainerButton","_templateObject12","Save","_templateObject13","white","Cansel","_templateObject14","Con","_templateObject15","Title","Wrapper","WrapperRes","Desc","Item","ButtonClose","Close","openBook","Modal","WellDoneModal","_ref","isOpenModal","setIsOpenModal","results","useSelector","selectResults","navigate","useNavigate","doneTasks","filter","task","isDone","notDoneTasks","_jsx","_Fragment","children","isOpen","onRequestClose","style","overlay","backgroundColor","content","boxSizing","top","left","right","bottom","marginRight","transform","padding","paddingLeft","width","height","borderRadius","contentLabel","_jsxs","onClick","xlinkHref","sprite","map","ua","_id","BtnWrapper","black","Img","Btn","BtnCancel","Link","Empty","location","useLocation","_useState","useState","_useState2","_slicedToArray","isOpenModalLogin","setIsOpenModalLogin","useEffect","_location$state","state","openModal","srcSet","concat","img1","img2","src","alt","ModalAddWord","TrainingRoom","token","selectToken","tasks","selectTasks","length","currentTaskIndex","setCurrentTaskIndex","_useState3","_useState4","translation","setTranslation","_useState5","_useState6","answers","setAnswers","_useState7","_useState8","progress","Math","ceil","dispatch","useDispatch","fetchTasks","CircularProgress","size","strokeWidth","withText","onSubmit","event","preventDefault","currentTask","newAnswer","en","_toConsumableArray","addAnswers","data","placeholder","value","onChange","e","target","rows","cols","type","prevIndex","Training","TrainingPage"],"sourceRoot":""}