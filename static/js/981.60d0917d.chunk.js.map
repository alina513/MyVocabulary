{"version":3,"file":"static/js/981.60d0917d.chunk.js","mappings":"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","sources":["components/Training/TrainingRoom.styled.jsx","components/Modal/WellDoneModal.styled.jsx","components/Modal/WellDoneModal.jsx","components/Training/Empty.styled.jsx","components/Training/Empty.jsx","components/Training/TrainingRoom.jsx","components/Training/Training.jsx","pages/TrainingPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  box-sizing: border-box;\n  display: block;\n  padding: 18px;\n  background-color: #fff;\n  margin-top: 8px;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 600px;\n    margin-bottom: 40px;\n    margin-right: auto;\n    margin-left: auto;\n    border-radius: 15px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 16px;\n    border-radius: 15px;\n    padding: 18px;\n    width: 1240px;\n    height: 338px;\n    background-color: #fff;\n    display: flex;\n    margin-right: auto;\n    margin-left: auto;\n    margin-bottom: 80px;\n  }\n`;\n\nexport const ContainerInputUkr = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  width: 343px;\n  height: 195px;\n  border-bottom: 1px solid #dbdbdb;\n  border-radius: 8px 8px 0 0;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 22px 22px;\n    width: 668px;\n    height: 282px;\n    background-color: #fcfcfc;\n    margin: auto;\n    padding-bottom: 22px;\n  }\n  @media screen and (min-width: 1440px) {\n    border-bottom: none;\n    border-right: 1px solid #dbdbdb;\n    border-radius: 8px 0 0 0;\n    padding: 22px 22px;\n    width: 602px;\n    height: 302px;\n    background-color: #fcfcfc;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\nexport const ContainerInputEng = styled.div`\n  box-sizing: border-box;\n  width: 343px;\n  height: 195px;\n  border-radius: 0 0 8px 8px;\n  @media screen and (min-width: 768px) {\n    padding: 22px 22px;\n    width: 668px;\n    height: 282px;\n    background-color: #fcfcfc;\n    margin: auto;\n  }\n  @media screen and (min-width: 1440px) {\n    border: 0px solid #dbdbdb;\n    border-radius: 0 8px 8px 0;\n    padding: 22px 22px;\n    width: 602px;\n    height: 302px;\n    background-color: #fcfcfc;\n    margin: auto;\n  }\n`;\nexport const WrapperLang = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  position: relative;\n`;\nexport const Input = styled.textarea`\n  resize: none;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 150%;\n  width: 100%;\n  height: 100%;\n  // width: 257px;\n  // height: 30px;\n  display: flex;\n  border: none;\n  background-color: transparent;\n  color: black;\n\n  &::placeholder {\n    font-family: 'SF';\n    color: #121417;\n    opacity: 1;\n    font-weight: 500;\n    font-size: 16px;\n  }\n\n  &::-webkit-input-placeholder {\n    color: #121417;\n    opacity: 1;\n    font-weight: 700;\n    font-size: 16px;\n    font-family: 'SF';\n  }\n\n  &::-moz-placeholder {\n    color: #121417;\n    opacity: 1;\n    font-weight: 500;\n    font-size: 16px;\n    font-family: 'SF';\n  }\n\n  &:-ms-input-placeholder {\n    color: #121417;\n    opacity: 1;\n    font-weight: 500;\n    font-size: 16px;\n    font-family: 'SF';\n  }\n\n  &:-moz-placeholder {\n    color: #121417;\n    opacity: 1;\n    font-weight: 500;\n    font-size: 16px;\n    font-family: 'SF';\n  }\n  @media screen and (min-width: 768px) {\n    &::placeholder {\n      font-family: 'SF';\n      color: #121417;\n      opacity: 1;\n      font-weight: 500;\n      font-size: 20px;\n    }\n\n    &::-webkit-input-placeholder {\n      color: #121417;\n      opacity: 1;\n      font-weight: 700;\n      font-size: 20px;\n      font-family: 'SF';\n    }\n\n    &::-moz-placeholder {\n      color: #121417;\n      opacity: 1;\n      font-weight: 500;\n      font-size: 20px;\n      font-family: 'SF';\n    }\n\n    &:-ms-input-placeholder {\n      color: #121417;\n      opacity: 1;\n      font-weight: 500;\n      font-size: 20px;\n      font-family: 'SF';\n    }\n\n    &:-moz-placeholder {\n      color: #121417;\n      opacity: 1;\n      font-weight: 500;\n      font-size: 20px;\n      font-family: 'SF';\n    }\n  }\n`;\nexport const ContainerLang = styled.div`\n  position: absolute;\n  top: 155px;\n  left: 240px;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    top: 0px;\n    left: 520px;\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    top: 0px;\n    left: 450px;\n  }\n`;\nexport const Lang = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 150%;\n  @media screen and (min-width: 768px) {\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 150%;\n  }\n`;\nexport const Svg = styled.svg`\n  width: 32px;\n  height: 32px;\n`;\nexport const Text = styled.p`\n  margin-top: 22px;\n  // margin-left: 22px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  @media screen and (min-width: 1440px) {\n    font-size: 20px;\n    margin-left: 0px;\n    margin-top: 0px;\n  }\n`;\nexport const Next = styled.button`\n  margin-top: 106px;\n  border: none;\n  background-color: transparent;\n  font-weight: 500;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  display: flex;\n  gap: 8px;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n    position: absolute;\n    top: 250px;\n    left: 15px;\n  }\n  @media screen and (min-width: 1440px) {\n    position: relative;\n    top: 0px;\n    left: 0px;\n    margin-top: 0px;\n    border: none;\n    background-color: transparent;\n    font-weight: 500;\n    font-size: 16px;\n    color: rgba(18, 20, 23, 0.5);\n    display: flex;\n    gap: 8px;\n    &:hover,\n    &:focus {\n      color: ${p => p.theme.colors.green};\n    }\n  }\n`;\nexport const SvgNext = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const ContainerButton = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 116px;\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n    width: 416px;\n    display: flex;\n    gap: 10px;\n    margin-left: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 0px;\n    width: 602px;\n    display: flex;\n    gap: 10px;\n    margin-left: 25px;\n  }\n`;\nexport const Save = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 10px;\n  border-radius: 30px;\n  border: none;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n    background-color: ${p => p.theme.colors.white};\n    border: 1px solid #85aa9f;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-right: 10px;\n    margin-left: 70px;\n  }\n`;\n\nexport const Cansel = styled.button`\n  color: ${p => p.theme.colors.green};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 30px;\n  border: 1px solid #85aa9f;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.green};\n  }\n  @media screen and (min-width: 768px) {\n    margin-right: 10px;\n    margin-left: 0px;\n  }\n`;\n\nexport const Con = styled.div`\n  margin-right: 8px;\n  margin-left: auto;\n  margin-top: 24px;\n  width: 60px;\n  @media screen and (min-width: 768px) {\n    margin-right: 100px;\n    margin-left: auto;\n    margin-top: 62px;\n    width: 60px;\n  }\n`;\n","import styled from 'styled-components';\nimport openBook from '../../assets/background/openbook.png';\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 40px;\n  line-height: 120%;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: ${p => p.theme.colors.white};\n  margin-bottom: 28px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const WrapperRes = styled.div``;\nexport const Desc = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  color: rgba(252, 252, 252, 0.5);\n  margin-bottom: 8px;\n`;\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 20px;\n  color: ${p => p.theme.colors.white};\n  margin-bottom: 4px;\n`;\nexport const ButtonClose = styled.button`\n  margin-left: auto;\n  background-color: transparent;\n  display: block;\n  border: none;\n  position: absolute;\n  right: 0px;\n  top: 0px;\n`;\nexport const Close = styled.svg`\n  width: 32px;\n  height: 32px;\n`;\nexport const Container = styled.div`\n  width: 342px;\n  height: 458px;\n  padding: 48px 16px;\n  position: relative;\n  background-color: ${p => p.theme.colors.green};\n  background-image: url(${openBook});\n  background-size: content;\n  background-repeat: no-repeat;\n  background-position: 200px 350px;\n  @media screen and (min-width: 768px) {\n    width: 527px;\n    height: 519px;\n    padding: 48px 64px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 527px;\n    height: 519px;\n    padding: 48px 64px;\n    background-position: 390px 390px;\n  }\n`;\n","import Modal from 'react-modal';\n\nimport sprite from '../../assets/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectResults } from '../../redux/words/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Title,\n  Wrapper,\n  WrapperRes,\n  Desc,\n  Item,\n  ButtonClose,\n  Close,\n  Container,\n} from './WellDoneModal.styled';\nModal.setAppElement('#modal');\n\nexport const WellDoneModal = ({ isOpenModal, setIsOpenModal }) => {\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'rgba(18, 20, 23, 0.2)',\n    },\n    content: {\n      boxSizing: 'border-box',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      borderRadius: '30px',\n      backgroundColor: '#85AA9F',\n    },\n  };\n\n  const results = useSelector(selectResults);\n  const navigate = useNavigate();\n\n  const doneTasks = results.filter(task => task.isDone);\n  const notDoneTasks = results.filter(task => !task.isDone);\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={() => {\n          setIsOpenModal(false);\n          navigate('/dictionary');\n        }}\n        style={customStyles}\n        contentLabel=\"More info modal\"\n      >\n        <Container>\n          <ButtonClose\n            onClick={() => {\n              setIsOpenModal(false);\n              navigate('/dictionary');\n            }}\n          >\n            <Close>\n              <use xlinkHref={sprite + '#icon-close'}></use>\n            </Close>\n          </ButtonClose>\n          <Title>Well done</Title>\n          <Wrapper>\n            <WrapperRes>\n              <Desc>Сorrect answers: </Desc>\n              <ul>\n                {doneTasks.map(task => (\n                  <Item key={task._id}>{task.ua}</Item>\n                ))}\n              </ul>\n            </WrapperRes>\n            <WrapperRes>\n              <Desc>Mistakes:</Desc>\n              <ul>\n                {notDoneTasks.map(task => (\n                  <Item key={task._id}>{task.ua}</Item>\n                ))}\n              </ul>\n            </WrapperRes>\n          </Wrapper>\n        </Container>\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  max-width: 902px;\n  margin-top: 193px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  display: flex;\n  gap: 32px;\n  padding: 20px;\n  @media screen and (max-width: 767px) {\n    max-width: 581px;\n    margin-top: 140px;\n    flex-direction: column-reverse;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 767px) {\n    flex-direction: row;\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 30px;\n  color: ${p => p.theme.colors.black};\n  margin-bottom: 32px;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  color: ${p => p.theme.colors.black};\n  margin-bottom: 64px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n\nexport const Btn = styled.button`\n  width: 203px;\n  height: 56px;\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n  border: none;\n  border-radius: 30px;\n\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 28px;\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.white};\n    color: ${p => p.theme.colors.black};\n    border: 1px solid ${p => p.theme.colors.green};\n  }\n`;\n\nexport const BtnCancel = styled(Link)`\n            width: 203px;\n            height: 56px;\n            margin-top: 24px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 14px;\n            background-color: transparent;\n            color: ${p => p.theme.colors.black};\n            border-radius: 30px;\n            border: 1px solid ${p => p.theme.colors.green};\n            font-size: 18px;\n            font-weight: 600;\n            line-height: 28px;\n          \n          &: hover, &: focus {\n            color:${p => p.theme.colors.green};}\n          `;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { ModalAddWord } from '../../components/Modal/ModalAddWord';\n\nimport {\n  Wrapper,\n  BtnWrapper,\n  Btn,\n  BtnCancel,\n  Img,\n  Title,\n  Text,\n} from './Empty.styled';\n\nimport img1 from '../../assets/background/book.png';\nimport img2 from '../../assets/background/b00k2x.png';\n\nexport const Empty = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isOpenModalLogin, setIsOpenModalLogin] = useState(false);\n  const handleAddWordClick = () => {\n    navigate('/dictionary', { state: { openModal: true } });\n  };\n\n  useEffect(() => {\n    if (location.state?.openModal) {\n      setIsOpenModalLogin(true);\n    }\n  }, [location.state]);\n\n  return (\n    <Wrapper>\n      <div>\n        <Title>You don't have a single word to learn right now. </Title>\n        <Text>\n          Please create or add a word to start the workout. We want to improve\n          your vocabulary and develop your knowledge, so please share the words\n          you are interested in adding to your study.\n        </Text>\n        <BtnWrapper>\n          <Btn onClick={handleAddWordClick}>Add word</Btn>\n          <BtnCancel>Cancel</BtnCancel>\n        </BtnWrapper>\n      </div>\n      <Img\n        srcSet={`${img1} 1x, ${img2} 2x`}\n        src={img1}\n        alt=\"report\"\n        width=\"265\"\n        height=\"283\"\n      />\n      <ModalAddWord\n        isOpenModalLogin={isOpenModalLogin}\n        setIsOpenModalLogin={setIsOpenModalLogin}\n      />\n    </Wrapper>\n  );\n};\n","import {\n  Container,\n  ContainerInputUkr,\n  ContainerInputEng,\n  WrapperLang,\n  Input,\n  ContainerLang,\n  Lang,\n  Svg,\n  Text,\n  Next,\n  SvgNext,\n  ContainerButton,\n  Save,\n  Cansel,\n  Con,\n} from './TrainingRoom.styled';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectTasks } from '../../redux/words/selectors';\nimport { fetchTasks, addAnswers } from '../../redux/words/operation';\nimport sprite from '../../assets/sprite.svg';\nimport { CircularProgress } from '../../components/Progress';\nimport { WellDoneModal } from '../../components/Modal/WellDoneModal';\nimport { Empty } from './Empty';\n\nexport const TrainingRoom = () => {\n  const tasks = useSelector(selectTasks);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(tasks.length / 2);\n  const [translation, setTranslation] = useState('');\n  const [answers, setAnswers] = useState([]);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const progress =\n    answers && tasks.length > 0\n      ? Math.ceil(((answers.length * 2) / tasks.length) * 100)\n      : 0;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  const handleNextTask = () => {\n    if (tasks.length > 0) {\n      const currentTask = tasks[currentTaskIndex];\n      if (translation) {\n        const newAnswer = {\n          _id: currentTask._id,\n          en: currentTask.en,\n          ua: translation,\n          task: 'ua',\n        };\n        setAnswers([...answers, newAnswer]);\n        setTranslation('');\n      }\n      setCurrentTaskIndex(prevIndex => (prevIndex + 1) % tasks.length);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const currentTask = tasks[currentTaskIndex];\n\n    if (translation) {\n      const newAnswer = {\n        _id: currentTask._id,\n        en: currentTask.en,\n        ua: translation,\n        task: 'ua',\n      };\n      const updatedAnswers = [...answers, newAnswer];\n      setAnswers(updatedAnswers);\n      setTranslation('');\n      setCurrentTaskIndex(prevIndex => (prevIndex + 1) % tasks.length);\n      dispatch(addAnswers({ data: updatedAnswers }));\n      setIsOpenModal(true);\n    }\n  };\n\n  return (\n    <>\n      {tasks.length > 0 ? (\n        <>\n          <Con>\n            <CircularProgress\n              size={58}\n              strokeWidth={5}\n              progress={progress}\n              withText={true}\n            />\n          </Con>\n          <form onSubmit={handleSubmit}>\n            <Container>\n              <ContainerInputUkr>\n                <WrapperLang>\n                  <Input\n                    placeholder=\"Введіть переклад\"\n                    value={translation}\n                    onChange={e => setTranslation(e.target.value)}\n                    rows=\"8\"\n                    cols=\"50\"\n                  ></Input>\n                  <ContainerLang>\n                    <Lang>Ukraine</Lang>\n                    <Svg>\n                      <use xlinkHref={sprite + '#icon-ukraine'}></use>\n                    </Svg>\n                  </ContainerLang>\n                </WrapperLang>\n                {currentTaskIndex < tasks.length - 1 && (\n                  <Next type=\"button\" onClick={handleNextTask}>\n                    Next\n                    <SvgNext>\n                      <use xlinkHref={sprite + '#icon-switch'}></use>\n                    </SvgNext>\n                  </Next>\n                )}\n              </ContainerInputUkr>\n              <ContainerInputEng>\n                <WrapperLang>\n                  {tasks.length > 0 && tasks[currentTaskIndex] ? (\n                    <Text>{tasks[currentTaskIndex].en}</Text>\n                  ) : (\n                    <Text>No tasks available</Text>\n                  )}\n                  <ContainerLang>\n                    <Lang>English</Lang>\n                    <Svg>\n                      <use xlinkHref={sprite + '#icon-uk'}></use>\n                    </Svg>\n                  </ContainerLang>\n                </WrapperLang>\n              </ContainerInputEng>\n            </Container>\n            <ContainerButton>\n              <Save type=\"submit\">Save </Save>\n              <Cansel>Cansel</Cansel>\n            </ContainerButton>\n          </form>\n          <WellDoneModal\n            isOpenModal={isOpenModal}\n            setIsOpenModal={setIsOpenModal}\n          />\n        </>\n      ) : (\n        <Empty />\n      )}\n    </>\n  );\n};\n","import { TrainingRoom } from './TrainingRoom';\nexport const Training = () => {\n  return <TrainingRoom />;\n};\n","import { Training } from '../components/Training/Training';\n\nexport default function TrainingPage() {\n  return <Training />;\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ContainerInputUkr","_templateObject2","ContainerInputEng","_templateObject3","WrapperLang","_templateObject4","Input","_templateObject5","ContainerLang","_templateObject6","Lang","_templateObject7","Svg","_templateObject8","Text","_templateObject9","Next","_templateObject10","p","theme","colors","green","SvgNext","_templateObject11","ContainerButton","_templateObject12","Save","_templateObject13","white","Cansel","_templateObject14","Con","_templateObject15","Title","Wrapper","WrapperRes","Desc","Item","ButtonClose","Close","openBook","Modal","WellDoneModal","_ref","isOpenModal","setIsOpenModal","results","useSelector","selectResults","navigate","useNavigate","doneTasks","filter","task","isDone","notDoneTasks","_jsx","_Fragment","children","isOpen","onRequestClose","style","overlay","backgroundColor","content","boxSizing","top","left","right","bottom","marginRight","transform","borderRadius","contentLabel","_jsxs","onClick","xlinkHref","sprite","map","ua","_id","BtnWrapper","black","Img","Btn","BtnCancel","Link","Empty","location","useLocation","_useState","useState","_useState2","_slicedToArray","isOpenModalLogin","setIsOpenModalLogin","useEffect","_location$state","state","openModal","srcSet","concat","img1","img2","src","alt","width","height","ModalAddWord","TrainingRoom","tasks","selectTasks","length","currentTaskIndex","setCurrentTaskIndex","_useState3","_useState4","translation","setTranslation","_useState5","_useState6","answers","setAnswers","_useState7","_useState8","progress","Math","ceil","dispatch","useDispatch","fetchTasks","CircularProgress","size","strokeWidth","withText","onSubmit","event","preventDefault","currentTask","newAnswer","en","updatedAnswers","_toConsumableArray","prevIndex","addAnswers","data","placeholder","value","onChange","e","target","rows","cols","type","Training","TrainingPage"],"sourceRoot":""}