{"version":3,"file":"static/js/939.6b32f160.chunk.js","mappings":"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","sources":["components/Dashboard/Filters.styled.jsx","components/Dashboard/Filters.jsx","components/Dashboard/Statistics.styled.jsx","components/Dashboard/Statistics.jsx","components/Dashboard/AddWord.styled.jsx","components/Dashboard/AddWord.jsx","components/Dashboard/Dashboard.styled.jsx","components/Dashboard/Dashboard.jsx","components/DictionaryTable/DictionaryTable.styled.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Modal/EditwordModal.styled.jsx","components/Modal/EditWordForm.styled.jsx","components/Modal/EditWordForm.jsx","components/Modal/EditWordModal.jsx","components/Loader.jsx","components/DictionaryTable/DictionaryTable.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\nmargin-bottom: 8px;\n  box-sizing: border-box;\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 343px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  display: block;\n  color: ${p => p.theme.colors.black};\n  background-color: #FFFFFF;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n    width: 274px;\n  height: 48px;\n  }\n`;\n\nexport const Select = styled.select`\nbox-sizing: border-box;\ndisplay: flex;\nwidth: 343px;\n  height: 48px;\n  padding: 12px 24px;\n@media screen and (min-width: 768px) {\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 164px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: ${p => p.theme.colors.black};\n  margin-left: 8px;\n  display: block;\n  background-color: #FFFFFF;}\n`;\nexport const Container = styled.div`\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    margin-bottom: 28px;\n    align-items: center;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 0px;\n    margin-left: 80px;\n  }\n`;\n\nexport const Radio = styled.input.attrs({type: \"radio\"})`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  font-size: 16px;\n  line-height: 22px;\n  color: ${p => p.theme.colors.black};\n  background-color: transparent;\n  border-radius: 50%;\n  border: 1px solid rgba(18, 20, 23);\n  appearance: none;\n\n  &:checked {\n    background-color: green;\n    color: ${p => p.theme.colors.black};\n    border: 2px solid  ${p => p.theme.colors.green};\n    background-clip: content-box;\n    padding: 3px;\n    background-color: ${p => p.theme.colors.green};\n  }\n`;\nexport const RadioContainer = styled.div`\n  box-sizing: border-box;\n  height: 48px;\n  padding: 12px 0px;\n  display: flex;\n  gap: 16px;\n  gap: 16px;\n  margin-bottom: 22px;\n  margin-top: 8px;\n  margin-left: 8px;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  font-weight: 400;\n  font-size: 16px;\n  text-align: center;\n  color: ${p => p.theme.colors.black};\n`;\n\n","import {\n  Input,\n  Select,\n  Container,\n  Radio,\n  RadioContainer,\n  Label,\n} from './Filters.styled';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectCategories } from '../../redux/words/selectors';\nimport { fetchCategories } from '../../redux/words/operation';\nimport { setFilter, setCategory, setRadio } from '../../redux/words/slice';\nimport { useEffect, useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\n\nexport const Filters = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const categories = useSelector(selectCategories);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n\n  const debouncedSetFilter = useMemo(\n    () => debounce(keyword => dispatch(setFilter(keyword)), 300),\n    [dispatch]\n  );\n\n  const handleKeywordChange = event => {\n    const keyword = event.target.value.trim();\n    setKeyword(keyword);\n    debouncedSetFilter(keyword);\n  };\n\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n    setSelectedRadio(\"\");\n    dispatch(setCategory(event.target.value));\n    dispatch(setRadio(\"\"));\n  };\n\n  const handleRadioChange = event => {\n    setSelectedRadio(event.target.value);\n    dispatch(setRadio(event.target.value));\n  };\n\n  useEffect(() => {\n    return () => {\n      debouncedSetFilter.cancel();\n    };\n  }, [debouncedSetFilter]);\n\n  return (\n    <Container>\n      <Input\n        placeholder=\"Find the word\"\n        value={keyword}\n        onChange={handleKeywordChange}\n      />\n      <Select id=\"categories\" name=\"categories\" onChange={handleCategoryChange}>\n        <option value=\"\"></option>\n        {categories &&\n          categories.map(category => (\n            <option key={category} value={category}>\n              {category}\n            </option>\n          ))}\n      </Select>\n      {selectedCategory === 'verb' && (\n        <RadioContainer>\n          {/* <Radio type=\"radio\" name=\"verb\" id=\"regular\" value=\"false\" /> */}\n          <Radio\n             type=\"radio\"\n             id=\"regular\"\n             name=\"verb\"\n             value=\"false\"\n             checked={selectedRadio === 'false'}\n             onChange={handleRadioChange}\n          />\n          <Label htmlFor=\"regular\">Regular</Label>\n          {/* <Radio type=\"radio\" name=\"verb\" id=\"irregular\" value=\"true\" /> */}\n          <Radio\n        type=\"radio\"\n        id=\"irregular\"\n        name=\"verb\"\n        value=\"true\"\n        checked={selectedRadio === 'true'}\n        onChange={handleRadioChange}\n          />\n          <Label htmlFor=\"irregular\">Irregular</Label>\n        </RadioContainer>\n      )}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Stat = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: rgba(18, 20, 23, 0.5);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 150%;\n  color: ${p => p.theme.colors.black};\n`;\n","import { Span, Stat } from './Statistics.styled';\nimport { useSelector } from 'react-redux';\nimport { selectTasks } from '../../redux/words/selectors';\n\nexport const Statistics = () => {\n  const words = useSelector(selectTasks);\n  return (\n    <Stat>\n      To study:<Span>{words?.length === 0 ? 0 : parseInt(words.length/2)}</Span>\n    </Stat>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  border: none;\n  color: ${p => p.theme.colors.black};\n  // background-color: ${p => p.theme.colors.buttonWhite};\n  background-color: transparent;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: ${p => p.theme.colors.black};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }\n`;\nexport const Svg = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n","import { Link, Button, Svg, Container } from './AddWord.styled';\nimport { ModalAddWord } from '../../components/Modal/ModalAddWord';\nimport { useState } from 'react';\nimport sprite from '../../assets/sprite.svg';\nexport const AddWord = ({ exam }) => {\n  const [isOpenModalLogin, setIsOpenModalLogin] = useState(false);\n  return (\n    <Container>\n      {exam && (\n        <Button\n          onClick={() => {\n            setIsOpenModalLogin(true);\n          }}\n        >\n          Add word\n          <Svg>\n            <use xlinkHref={sprite + '#icon-plus'}></use>\n          </Svg>\n        </Button>\n      )}\n      <Link to=\"/training\">\n        Train oneself\n        <Svg>\n          <use xlinkHref={sprite + '#icon-switch'}></use>\n        </Svg>\n      </Link>\n      <ModalAddWord\n        isOpenModalLogin={isOpenModalLogin}\n        setIsOpenModalLogin={setIsOpenModalLogin}\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: block;\n  margin-top: 32px;\n  margin-left: 16px;\n  @media screen and (min-width: 768px) {\n    margin-left: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 1240px;\n    margin-right: 80px;\n    margin-left: 80px;\n  }\n`;\nexport const ContainerStat = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    gap: 16px;\n  }\n`;\n","import { Filters } from './Filters';\nimport { Statistics } from './Statistics';\nimport { AddWord } from './AddWord';\nimport { Container, ContainerStat } from './Dashboard.styled';\nexport const Dashboard = ({ exam }) => {\n  return (\n    <Container>\n      <Filters />\n      <ContainerStat>\n        <Statistics />\n        <AddWord exam={exam} />\n      </ContainerStat>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: ${p => p.theme.colors.white};\n  border-radius: 15px;\n  margin-right: auto;\n  margin-left: auto;\n\n  padding: 14px;\n  width: 343px;\n  height: 563px;\n  margin-top: 32px;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 616px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 18px;\n    width: 1240px;\n    height: 670px;\n    margin-top: 37px;\n  }\n`;\nexport const Container = styled.div`\n  width: 343px;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n    height: 640px;\n  }\n`;\n\nexport const Table = styled.table`\n  box-sizing: border-box;\n  width: 315px;\n  height: 540px;\n\n  @media screen and (min-width: 768px) {\n    width: 676px;\n    height: 566px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1204px;\n    height: 540px;\n    margin-right: auto;\n    margin-left: auto;\n    border-collapse: collapse;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 0 0 1px ${p => p.theme.colors.white};\n  }\n`;\nexport const Span = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  @media screen and (min-width: 1440px) {\n    justify-content: space-between;\n    gap: 0px;\n  }\n`;\n\nexport const Th = styled.th`\n  border-bottom: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  padding: 0px 0px 0px 3px;\n  height: 72px;\n  background-color: rgba(133, 170, 159, 0.1);\n  font-weight: 500;\n  font-size: 10px;\n  &:first-child {\n    padding-left: 6px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0px 12px 0px 12px;\n    text-align: left;\n    font-size: 14px;\n    &:first-child {\n      padding-left: 12px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    border-bottom: 1px solid #dbdbdb;\n    border-right: 1px solid #dbdbdb;\n    text-align: left;\n    padding: 0px 22px 0px 22px;\n    height: 72px;\n    background-color: rgba(133, 170, 159, 0.1);\n    font-weight: 500;\n    font-size: 20px;\n    color: ${p => p.theme.colors.black};\n    &:first-child {\n      padding-left: 22px;\n    }\n  }\n`;\n\nexport const Tr = styled.tr`\n  height: 30px;\n\n  &:last-child td {\n    border-bottom: none;\n  }\n  background-color: #fcfcfc;\n  @media screen and (min-width: 1440px) {\n    height: 80px;\n  }\n`;\n\nexport const Td = styled.td`\n  font-weight: 500;\n  font-size: 10px;\n  color: ${p => p.theme.colors.black};\n  border-bottom: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  padding: 10px 4px 10px 4px;\n\n  &:last-child {\n    border-right: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 10px 0px 10px 14px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-weight: 500;\n    font-size: 20px;\n    padding: 0px 22px 0px 22px;\n  }\n`;\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }\n`;\n\nexport const Svg = styled.svg`\n  display: none;\n  width: 32px;\n  height: 32px;\n  @media screen and (min-width: 768px) {\n    display: block;\n  }\n`;\nexport const Hidden = styled.span`\n  display: none;\n`;\nexport const SvgAdd = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const SpanAddWord = styled.span`\n  display: none;\n  @media screen and (min-width: 768px) {\n    display: block;\n  }\n`;\n\nexport const SpanAdd = styled.span`\n  @media screen and (min-width: 768px) {\n    font-weight: 500;\n    font-size: 16px;\n    display: block;\n    align-items: center;\n    gap: 8px;\n  }\n  @media screen and (min-width: 1440px) {\n    display: flex;\n  }\n`;\nexport const ButtonAdd = styled.button`\n  font-weight: 500;\n  font-size: 20px;\n  color: ${p => p.theme.colors.black};\n  border: none;\n  background-color: transparent;\n  display: block;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }\n`;\n\nexport const ConProcent = styled.div`\n  display: flex;\n  gap: 7px;\n`;\nexport const Procent = styled.p`\n  display: none;\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    font-weight: 500;\n    font-size: 22px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.nav`\n  margin-top: 28px;\n  margin-bottom: 50px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  background-color: transparent;\n\n  color: var(--primary-color-black);\n  border: 1px solid var(--primary-color-fon);\n  &:hoveer,\n  &:focus {\n    background-color: ${p => p.theme.colors.green};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const Activ = styled.button`\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 13px;\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  background-color: ${props => (props.$isactive ? '#85AA9F' : '#fff')};\n  color: ${props => (props.$isactive ? '#fff' : '#121417')};\n  border: 1px solid #121417;\n  // &:hover,&:focus {\n  //   background-color: ${props => (props.$isactive ? '#0056b3' : '#e7e7e7')};\n  // }\n`;\n","import React from 'react';\nimport { Wrapper, List, Button, Activ } from './Pagination.styled';\n\nconst Pagination = ({ totalPages, page, onPageChange }) => {\n\n  const handlePageChange = newPage => {\n      onPageChange(newPage);\n    \n  };\n\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n\n    const renderDots = key => (\n      <li key={key} className=\"dots\">\n        ...\n      </li>\n    );\n\n    if (totalPages <= 7) {\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(\n          <li key={i}>\n            <Activ $isactive={page === i} onClick={() => handlePageChange(i)}>\n              {i}\n            </Activ>\n          </li>\n        );\n      }\n    } else {\n      let s = 1;\n      let e = 3;\n      if (page > 1) {\n        s = page - 1;\n        e = page + 1;\n      }\n      if (page > totalPages - 3) {\n        s = totalPages - 3;\n        e = totalPages - 1;\n      }\n\n      for (let i = s; i <= e; i++) {\n        pageNumbers.push(\n          <li key={i}>\n            <Activ $isactive={page === i} onClick={() => handlePageChange(i)}>\n              {i}\n            </Activ>\n          </li>\n        );\n      }\n\n      pageNumbers.push(renderDots('dots1'));\n\n      for (let i = totalPages; i <= totalPages; i++) {\n        pageNumbers.push(\n          <li key={i}>\n            <Activ $isactive={page === i} onClick={() => handlePageChange(i)}>\n              {i}\n            </Activ>\n          </li>\n        );\n      }\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <Wrapper>\n      <List>\n        <li>\n          <Button disabled={page === 1} onClick={() => handlePageChange(1)}>\n            {'<<'}\n          </Button>\n        </li>\n        {page !== 1 && (\n          <li>\n            <Button onClick={() => handlePageChange(page - 1)}>{'<'}</Button>\n          </li>\n        )}\n        {renderPageNumbers()}\n        {page !== totalPages && (\n          <li>\n            <Button onClick={() => handlePageChange(page + 1)}>{'>'}</Button>\n          </li>\n        )}\n        <li>\n          <Button\n            disabled={page === totalPages}\n            onClick={() => handlePageChange(totalPages)}\n          >\n            {'>>'}\n          </Button>\n        </li>\n      </List>\n    </Wrapper>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n`;\n\nexport const Edit = styled.button`\ndisplay: flex;\nwidth: 76px;\nheight: 24px;\nfont-weight: 500;\nfont-size: 16px;\nline-height: 150%;\nborder: none;\nbackground-color: transparent;\n&:hover, &:focus {\n    color: ${p => p.theme.colors.green};\n    \n\n`;\n\nexport const Delet = styled.button`\ndisplay: flex;\nalign-items: center;\nwidth: 76px;\nheight: 24px;\nfont-weight: 500;\nfont-size: 16px;\nline-height: 150%;\nborder: none;\nbackground-color: transparent;\n&:hover, &:focus {\n    color: ${p => p.theme.colors.green};\n    \n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-right: 4px;\n`;\n\nexport const Content = styled.div`\n// position: relative;\n// width: 100%;\n// height: 100%;\n`\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.form`\n  color: ${p => p.theme.colors.white};\n  position: relative;\n  padding: 48px 64px;\n  width: 342px;\n  height: 359px;\n  background-color: #85AA9F;\n  border-radius: 30px;\n  @media screen and (min-width: 768px) {\n    width: 627px;\n    height: 345px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 48px 64px;\n      width: 627px;\n      height: 345px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 40px;\n  line-height: 120%;\n  letter-spacing: -0.02em;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  ont-weight: 400;\n  font-size: 20px;\n  line-height: 150%;\n  color: rgba(252, 252, 252, 0.8);\n  margin-bottom: 32px;\n`;\nexport const Select = styled.select`\n  box-sizing: border-box;\n  display: flex;\n  border: 1px solid rgba(252, 252, 252, 0.3);\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 204px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n`;\nexport const Input = styled.input`\n  display: flex;\n  box-sizing: border-box;\n  border: 1px solid rgba(252, 252, 252, 0.3);\n  border-radius: 15px;\n  padding: 16px 246px 16px 18px;\n  width: 354px;\n  height: 56px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n`;\nexport const Lang = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n`;\nexport const AddButton = styled.button`\n  border-radius: 30px;\n  padding: 12px 60px;\n  width: 158px;\n  height: 48px;\n  border: none;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: ${p => p.theme.colors.white};\n  color: ${p => p.theme.colors.black};\n  margin-right: 10px;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.green};\n  }\n  @media screen and (min-width: 768px) {\n    width: 245px;\n    height: 56px;\n    padding: 14px 104px;\n  }\n`;\nexport const CancelButton = styled.button`\n  border: 1px solid rgba(252, 252, 252, 0.4);\n  border-radius: 30px;\n  padding: 12px 45px;\n  width: 158px;\n  height: 48px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 156%;\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.black};\n    background-color: ${p => p.theme.colors.white};\n  }\n  @media screen and (min-width: 768px) {\n    width: 245px;\n    height: 56px;\n    padding: 14px 92px;\n  }\n`;\nexport const ButtonClose = styled.button`\n  margin-left: auto;\n  background-color: #85aa9f;\n  display: block;\n  border: none;\n  position: absolute;\n  right: -50px;\n  top: -50px;\n`;\n\nexport const Close = styled.svg`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const Radio = styled.input``;\nexport const RadioContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 22px;\n  margin-top: 8px;\n`;\nexport const Label = styled.label`\n  font-weight: 400;\n  font-size: 16px;\n  text-align: center;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const SvgLang = styled.svg`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const ContainerLang = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin-left: 0px;\n  @media screen and (min-width: 768px) {\n    margin-left: 32px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  display: block;\n  margin-top: 16px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n\n  }\n`;\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 32px;\n`;\n\nexport const RadioText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 117%;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 14px;\n  margin-top: 5px;\n`;\n","import Modal from 'react-modal';\nimport sprite from '../../assets/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { editWord } from '../../redux/words/operation';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast'; \nimport {\n  Wrapper,\n  ButtonClose,\n  Close,\n  InputContainer,\n  Input,\n  ContainerLang,\n  Lang,\n  SvgLang,\n  ButtonContainer,\n  AddButton,\n  CancelButton,\n  ErrorMessage,\n} from './EditWordForm.styled';\n\nModal.setAppElement('#modal');\n\nconst schema = yup\n  .object({\n    eng: yup\n      .string()\n      .matches(/\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/, 'Text is not valid')\n      .required('Is required'),\n    ukr: yup\n      .string()\n      .matches(/^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\s]+$/u, 'Text is not valid')\n      .required('Is required'),\n  })\n  .required();\n\nexport const EditWordForm = ({ isOpenModal, setIsOpenModal, wordData }) => {\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'rgba(18, 20, 23, 0.2)',\n    },\n    content: {\n      boxSizing: 'border-box',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      // padding: '48px 64px 48px 64px',\n      // paddingLeft: '64px',\n      // width: '627px',\n      // height: '345px',\n      borderRadius: '30px',\n      border: 'none',\n      // backgroundColor: '#85AA9F',\n      padding: '0px 0px 0px 0px',\n    },\n  };\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  \n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    try {\n      event.preventDefault();\n      const en = event.target.elements.eng.value;\n      const ua = event.target.elements.ukr.value;\n      const category = wordData.category;\n      const isIrregular = wordData.isIrregular;\n      const id = wordData._id;\n      await schema.validate({ eng: en, ukr: ua });\n\n      dispatch(editWord({ id, en, ua, category, isIrregular }));\n      event.target.reset();\n      setIsOpenModal(false);\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage(error.message);\n      toast.error(error.message);\n    }\n  };\n\n  return (\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={() => {\n          setIsOpenModal(false);\n        }}\n        style={customStyles}\n        contentLabel=\"More info modal\"\n      >\n        <Wrapper onSubmit={handleSubmit}>\n          <ButtonClose onClick={() => setIsOpenModal(false)}>\n            <Close>\n              <use xlinkHref={sprite + '#icon-close'}></use>\n            </Close>\n          </ButtonClose>\n\n          <InputContainer>\n            <Input name=\"ukr\"></Input>\n\n            <ContainerLang>\n              <SvgLang>\n                <use xlinkHref={sprite + '#icon-ukraine'}></use>\n              </SvgLang>\n              <Lang>Ukrainian</Lang>\n            </ContainerLang>\n          </InputContainer>\n          <InputContainer>\n            <Input name=\"eng\"></Input>\n\n            <ContainerLang>\n              <SvgLang>\n                <use xlinkHref={sprite + '#icon-uk'}></use>\n              </SvgLang>\n              <Lang>English</Lang>\n            </ContainerLang>\n          </InputContainer>\n          {/* <ErrorMessage>Write on language that set on input</ErrorMessage> */}\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n          <ButtonContainer>\n            <AddButton type=\"submit\">Save</AddButton>\n            <CancelButton type=\"button\" onClick={() => setIsOpenModal(false)}>\n              Cancel\n            </CancelButton>\n          </ButtonContainer>\n        </Wrapper>\n      </Modal>\n  );\n};\n","import Modal from 'react-modal';\nimport { Edit, Delet, Wrapper, Svg, Content } from './EditwordModal.styled';\nimport sprite from '../../assets/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { EditWordForm } from './EditWordForm';\nimport { deleteWordById } from '../../redux/words/operation';\n\nModal.setAppElement('#modal');\n\nexport const EditWordModal = ({ isOpenModal, setIsOpenModal, wordData }) => {\n  const [isOpenEditModal, setIsOpenEditModal] = useState(false);\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'transparent',\n      width: '100wv',\n      height: '100hv',\n    },\n    content: {\n      boxSizing: 'border-box',\n      top: '75%',\n      left: '70%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '12px 0px 12px 0px',\n      width: '130px',\n      height: '80px',\n      borderRadius: '15px',\n      backgroundColor: '#FFF',\n      boxShadow: '0 4px 47px 0 rgba(18, 20, 23, 0.08)',\n      border: 'none',\n    },\n  };\n\n  const handleEditClick = () => {\n    setIsOpenEditModal(true);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    const id = wordData._id;\n    dispatch(deleteWordById({ id }));\n    setIsOpenModal(false);\n  };\n\n  return (\n    <Content>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={() => {\n          setIsOpenModal(false);\n        }}\n        style={customStyles}\n        contentLabel=\"More info modal\"\n      >\n        <Wrapper>\n          <Edit onClick={handleEditClick} type=\"button\">\n            <Svg>\n              <use xlinkHref={sprite + '#icon-pen'}></use>\n            </Svg>\n            Edit\n          </Edit>\n          <Delet onClick={handleDelete}>\n            <Svg>\n              <use xlinkHref={sprite + '#icon-trash'}></use>\n            </Svg>\n            Delete\n          </Delet>\n        </Wrapper>\n      </Modal>\n      <EditWordForm\n        isOpenModal={isOpenEditModal}\n        setIsOpenModal={setIsOpenEditModal}\n        wordData={wordData}\n      />\n    </Content>\n  );\n};\n","import { ColorRing } from \"react-loader-spinner\";\nexport const Loader = () =>(\n<ColorRing\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>)","import {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport * as React from 'react';\nimport {\n  Wrapper,\n  Th,\n  Tr,\n  Td,\n  Button,\n  Table,\n  Svg,\n  Span,\n  Hidden,\n  SvgAdd,\n  SpanAdd,\n  ButtonAdd,\n  SpanAddWord,\n  Procent,\n  ConProcent,\n} from './DictionaryTable.styled';\nimport sprite from '../../assets/sprite.svg';\nimport { CircularProgress } from '../Progress';\n\nimport Pagination from '../Pagination/Pagination';\n\nimport {\n  fetchWords,\n  fetchWordsRecommend,\n  addRecommendWord,\n  fetchTasks,\n} from '../../redux/words/operation';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  selectWords,\n  selectTotalPage,\n  selectFiltersKeyWord,\n  selectFiltersCategory,\n  selectWordsRecommend,\n  selectIsLoading,\n  selectFiltersIsIrregular,\n} from '../../redux/words/selectors';\nimport { useSelector } from 'react-redux';\nimport { EditWordModal } from '../../components/Modal/EditWordModal';\nimport { useState } from 'react';\nimport { Loader } from '../../components/Loader';\n\nexport function DictionaryTable({ exam }) {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [selectedRowData, setSelectedRowData] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleStatusClick = rowData => {\n    setSelectedRowData(rowData);\n    setIsOpenModal(true);\n  };\n\n  const words = useSelector(selectWords);\n  const recommend = useSelector(selectWordsRecommend);\n  const totalPages = useSelector(selectTotalPage);\n  const keyword = useSelector(selectFiltersKeyWord);\n  const category = useSelector(selectFiltersCategory);\n  const isLoading = useSelector(selectIsLoading);\n  const isIrregular = useSelector(selectFiltersIsIrregular);\n  const dispatch = useDispatch();\n\n  const handleAddRecommend = id => {\n    dispatch(addRecommendWord({ id }));\n  };\n\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (exam) {\n      dispatch(\n        fetchWords({ page: currentPage, keyword, category, isIrregular })\n      );\n    } else {\n      dispatch(\n        fetchWordsRecommend({\n          page: currentPage,\n          keyword,\n          category,\n          isIrregular,\n        })\n      );\n    }\n  }, [dispatch, currentPage, keyword, category, exam, isIrregular]);\n\n  const columnHelper = createColumnHelper();\n\n  let columns;\n  if (exam === true) {\n    columns = [\n      columnHelper.accessor('en', {\n        cell: info => info.getValue(),\n        header: () => (\n          <Span>\n            Word\n            <Svg>\n              <use xlinkHref={sprite + '#icon-uk'}></use>\n            </Svg>\n          </Span>\n        ),\n      }),\n      columnHelper.accessor('ua', {\n        cell: info => info.getValue(),\n        header: () => (\n          <Span>\n            Translation\n            <Svg>\n              <use xlinkHref={sprite + '#icon-ukraine'}></use>\n            </Svg>\n          </Span>\n        ),\n      }),\n      columnHelper.accessor('category', {\n        header: () => <span className=\"category-exam\">Category</span>,\n        cell: info => <span className=\"category-exam\">{info.getValue()}</span>,\n      }),\n      columnHelper.accessor('progress', {\n        header: () => <span>Progress</span>,\n        cell: info => (\n          <ConProcent>\n            <Procent>{info.getValue()}%</Procent>\n            <CircularProgress\n              size={26}\n              strokeWidth={4}\n              progress={info.getValue()}\n              color1=\"#2BD627\"\n              color2=\"#D4F8D3\"\n              color3=\"#D4F8D3\"\n            />\n          </ConProcent>\n        ),\n      }),\n      columnHelper.accessor('status', {\n        header: () => <span>Edit</span>,\n        cell: info => (\n          <Button onClick={() => handleStatusClick(info.row.original)}>\n            {info.getValue() || '...'}\n          </Button>\n        ),\n      }),\n    ];\n  } else {\n    columns = [\n      columnHelper.accessor('en', {\n        cell: info => info.getValue(),\n        header: () => (\n          <Span>\n            Word\n            <Svg>\n              <use xlinkHref={sprite + '#icon-uk'}></use>\n            </Svg>\n          </Span>\n        ),\n      }),\n      columnHelper.accessor('ua', {\n        cell: info => info.getValue(),\n        header: () => (\n          <Span>\n            Translation\n            <Svg>\n              <use xlinkHref={sprite + '#icon-ukraine'}></use>\n            </Svg>\n          </Span>\n        ),\n      }),\n      columnHelper.accessor('category', {\n        header: () => 'Category',\n        cell: info => <span>{info.getValue()}</span>,\n      }),\n\n      columnHelper.accessor('status', {\n        header: () => <Hidden>Status</Hidden>,\n        cell: info => (\n          <ButtonAdd\n            type=\"button\"\n            onClick={() => handleAddRecommend(info.row.original._id)}\n          >\n            {info.getValue() || (\n              <SpanAdd>\n                <SpanAddWord> Add to dictionary</SpanAddWord>\n                <SvgAdd>\n                  <use xlinkHref={sprite + '#icon-switch'}></use>\n                </SvgAdd>\n              </SpanAdd>\n            )}\n          </ButtonAdd>\n        ),\n      }),\n    ];\n  }\n\n  let value;\n  if (exam) {\n    value = words;\n  } else {\n    value = recommend;\n  }\n\n  const table = useReactTable({\n    data: value,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <>\n      <Wrapper>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map(headerGroup => (\n                <tr key={headerGroup.id}>\n                  {headerGroup.headers.map(header => (\n                    <Th key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </Th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody>\n              {value.length === 0 ? (\n                <tr>\n                  <Td\n                    colSpan={columns.length}\n                    style={{ textAlign: 'center', padding: '20px' }}\n                  >\n                    No words found. Try adjusting the filters or adding new\n                    words using button or go to recommend and add word from\n                    there.\n                  </Td>\n                </tr>\n              ) : (\n                table.getRowModel().rows.map(row => (\n                  <Tr key={row.id}>\n                    {row.getVisibleCells().map(cell => (\n                      <Td\n                        key={cell.id}\n                        className={\n                          exam && cell.column.id === 'category'\n                            ? 'category-exam'\n                            : ''\n                        }\n                      >\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </Td>\n                    ))}\n                  </Tr>\n                ))\n              )}\n            </tbody>\n          </Table>\n        )}\n        <EditWordModal\n          isOpenModal={isOpenModal}\n          setIsOpenModal={setIsOpenModal}\n          wordData={selectedRowData}\n        />\n      </Wrapper>\n\n      <Pagination\n        totalPages={totalPages}\n        page={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </>\n  );\n}\n"],"names":["Input","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","black","Select","_templateObject2","Container","_templateObject3","Radio","type","_templateObject4","green","RadioContainer","_templateObject5","Label","_templateObject6","Filters","dispatch","useDispatch","useEffect","fetchCategories","categories","useSelector","selectCategories","_useState","useState","_useState2","_slicedToArray","selectedCategory","setSelectedCategory","_useState3","_useState4","keyword","setKeyword","_useState5","_useState6","selectedRadio","setSelectedRadio","debouncedSetFilter","useMemo","debounce","setFilter","handleRadioChange","event","target","value","setRadio","cancel","_jsxs","children","_jsx","placeholder","onChange","trim","id","name","setCategory","map","category","checked","htmlFor","Stat","Span","Statistics","words","selectTasks","length","parseInt","Button","buttonWhite","Link","NavLink","Svg","AddWord","_ref","exam","isOpenModalLogin","setIsOpenModalLogin","onClick","xlinkHref","sprite","to","ModalAddWord","ContainerStat","Dashboard","Wrapper","white","Table","Th","Tr","Td","_templateObject7","_templateObject8","_templateObject9","Hidden","_templateObject10","SvgAdd","_templateObject11","SpanAddWord","_templateObject12","SpanAdd","_templateObject13","ButtonAdd","_templateObject14","ConProcent","_templateObject15","Procent","_templateObject16","List","Activ","props","$isactive","totalPages","page","onPageChange","handlePageChange","newPage","disabled","key","pageNumbers","_loop","i","push","s","e","_loop2","className","_loop3","renderPageNumbers","Edit","Delet","Content","Lang","AddButton","CancelButton","ButtonClose","Close","SvgLang","ContainerLang","InputContainer","ButtonContainer","_templateObject17","ErrorMessage","_templateObject18","_templateObject19","Modal","schema","yup","eng","matches","required","ukr","EditWordForm","isOpenModal","setIsOpenModal","wordData","errorMessage","setErrorMessage","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","en","ua","isIrregular","_context","prev","next","preventDefault","elements","_id","validate","editWord","reset","t0","message","toast","stop","_x","apply","arguments","isOpen","onRequestClose","style","overlay","backgroundColor","content","boxSizing","top","left","right","bottom","marginRight","transform","borderRadius","border","padding","contentLabel","onSubmit","EditWordModal","isOpenEditModal","setIsOpenEditModal","width","height","boxShadow","deleteWordById","Loader","ColorRing","visible","ariaLabel","wrapperStyle","wrapperClass","DictionaryTable","selectedRowData","setSelectedRowData","currentPage","setCurrentPage","selectWords","recommend","selectWordsRecommend","selectTotalPage","selectFiltersKeyWord","selectFiltersCategory","isLoading","selectIsLoading","selectFiltersIsIrregular","fetchTasks","fetchWords","fetchWordsRecommend","columns","columnHelper","createColumnHelper","accessor","cell","info","getValue","header","CircularProgress","size","strokeWidth","progress","color1","color2","color3","rowData","row","original","addRecommendWord","table","useReactTable","data","getCoreRowModel","_Fragment","getHeaderGroups","headerGroup","headers","isPlaceholder","flexRender","column","columnDef","getContext","colSpan","textAlign","getRowModel","rows","getVisibleCells","Pagination"],"sourceRoot":""}